    pc-> [programs\valid\cmd.go:17:9:] int
    program-> [programs\valid\cmd.go:15:11:] [128]int
    st-> [programs\valid\cmd.go:18:9:] struct {
                                           sp int;
                                           stk [66]int;
                                       }
    error-> [programs\valid\cmd.go:38:8:] string
    op-> [programs\valid\cmd.go:36:14:] int
    st-> [programs\valid\cmd.go:36:30:] struct {
                                            sp int;
                                            stk [66]int;
                                        }

ADD-> [programs\valid\cmd.go:9:5:] int
EXIT-> [programs\valid\cmd.go:6:5:] int
MUL-> [programs\valid\cmd.go:9:15:] int
NOP-> [programs\valid\cmd.go:8:5:] int
PRINT-> [programs\valid\cmd.go:7:19:] int
PUSH1-> [programs\valid\cmd.go:7:5:] int
PUSH2-> [programs\valid\cmd.go:7:12:] int
SUB-> [programs\valid\cmd.go:9:10:] int
append-> [<universe>] _ty_append
bool-> [<universe>] bool
cap-> [<universe>] _ty_cap
copy-> [<universe>] _ty_copy
end-> [programs\valid\cmd.go:63:6:] func() void
exec-> [programs\valid\cmd.go:15:6:] func([128]int) void
false-> [<universe>] bool (untyped)
float64-> [<universe>] float
instruction-> [programs\valid\cmd.go:3:6:] int
int-> [<universe>] int
len-> [<universe>] _ty_len
make-> [<universe>] _ty_make
nil-> [<universe>] nil
operate-> [programs\valid\cmd.go:36:6:] func(int, struct {
                                                      sp int;
                                                      stk [66]int;
                                                  }) struct {
                                                         sp int;
                                                         stk [66]int;
                                                     }
rune-> [<universe>] rune
state-> [programs\valid\cmd.go:13:6:] struct {
                                          sp int;
                                          stk [66]int;
                                      }
string-> [<universe>] string
true-> [<universe>] bool (untyped)
